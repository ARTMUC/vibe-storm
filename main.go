// Package main VibeStorm - Modern Web Application
//
//	@title			VibeStorm API
//	@version		1.0.0
//	@description	A modern web application built with Go Echo, Templ, and MySQL
//	@termsOfService	http://swagger.io/terms/
//
//	@contact.name	API Support
//	@contact.url	http://www.swagger.io/support
//	@contact.email	support@swagger.io
//
//	@license.name	MIT
//	@license.url	https://opensource.org/licenses/MIT
//
//	@host		localhost:8080
//	@BasePath	/api/v1
//
//	@securityDefinitions.apikey	ApiKeyAuth
//	@in							header
//	@name						Authorization
//	@description				Bearer token authentication
//
//	@securityDefinitions.apikey	CookieAuth
//	@in							cookie
//	@name						session_id
//	@description				Session cookie authentication
package main

import (
	"log"
	"vibe-storm/internal/interfaces/http"
	"vibe-storm/pkg/config"
	"vibe-storm/pkg/middleware"

	_ "vibe-storm/api/docs" // This will be generated by swag

	"github.com/labstack/echo/v4"
	echoSwagger "github.com/swaggo/echo-swagger"
)

func main() {
	// Load configuration
	cfg := config.Load()

	// Initialize Echo instance with middleware
	e := middleware.InitializeEcho()

	// Setup Swagger documentation
	setupSwagger(e)

	// Setup routes
	http.SetupRoutes(e)

	// Start server
	log.Printf("Starting server on port %s", cfg.Server.Port)
	log.Printf("Swagger UI available at: http://localhost:%s/swagger/index.html", cfg.Server.Port)
	if err := e.Start(":" + cfg.Server.Port); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}

// setupSwagger configures Swagger documentation endpoints
func setupSwagger(e *echo.Echo) {
	// Swagger documentation endpoint
	e.GET("/swagger/*", echoSwagger.WrapHandler)

	// Alternative Swagger JSON endpoint
	// e.GET("/api/v1/swagger.json", func(c echo.Context) error {
	//     return c.JSON(http.StatusOK, getSwaggerInfo())
	// })
}
